import pytest
from Junction import Junction
from unittest.mock import MagicMock
import Equations

@pytest.fixture
def sample_junction():
    return Junction()

def test_junction_initialization(sample_junction):
    assert isinstance(sample_junction, Junction) #Check object is created
    assert len(sample_junction.in_roads) == 4 #Ensure 4 roads are initialized

def test_get_road(sample_junction):
    road = sample_junction.get_road(0)
    assert road is not None #Ensure road object is retrieved
    assert hasattr(road, 'total_standard_lanes') #Check if road has expected methods

def test_efficiency_score(sample_junction, monkeypatch):
    mock_vph_rates = [1000, 800, 900, 1200]

    #Mock the efficiency function to return a testable value
    monkeypatch.setattr(Equations, "get_efficiency_score", lambda vph_rates, setup: 42)
    
    result = sample_junction.efficiency_score(mock_vph_rates)
    assert result == 42 #Ensure mock function is called and returned

if __name__ == "__main__":
    pytest.main()
